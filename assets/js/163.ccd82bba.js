(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{643:function(s,e,t){"use strict";t.r(e);var a=t(19),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"kubectl命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl命令"}},[s._v("#")]),s._v(" kubectl命令")]),s._v(" "),t("h2",{attrs:{id:"kubectl命令行管理工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl命令行管理工具"}},[s._v("#")]),s._v(" Kubectl命令行管理工具")]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"基础命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础命令"}},[s._v("#")]),s._v(" 基础命令")])]),s._v(" "),t("ul",[t("li",[s._v("[x] "),t("strong",[s._v("create\t\t\t\t\t通过文件名或标准输入创建资源")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("expose\t\t\t\t\t为Deployment，pod创建Service")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("run                     在集群中运行一个特定的镜像")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("set                     在对象上设置特定的功能")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("explain                 文档参考资料")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("get                     显示一个或多个资源")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("edit                    使用系统编辑器编辑一个资源")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("delete                  通过文件名、标准输入、资源名称或标签选择器来删除资源")])])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"部署命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署命令"}},[s._v("#")]),s._v(" "),t("strong",[s._v("部署命令")])])]),s._v(" "),t("ul",[t("li",[s._v("[x] "),t("strong",[s._v("rollout\t\t\t\t\t管理Deployment、Daemonset资源的发布（例如状态、发布记录、回滚等）")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("rolling-update            滚动升级、仅限ReplicationController")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("scale  \t\t\t\t\t对Deployment、ReplicaSet、RC或者Job资源扩容或者伸缩Pod数量")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("autoscale  \t\t\t\t对Deploy、RS、RC配置自动伸缩规则（依赖metrics-server和hpa）")])])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"集群管理命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群管理命令"}},[s._v("#")]),s._v(" "),t("strong",[s._v("集群管理命令")])])]),s._v(" "),t("ul",[t("li",[s._v("[x] "),t("strong",[s._v("certificate\t\t\t\t修改证书资源")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("cluster-info   \t\t\t显示集群信息")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("top           \t\t\t查看资源利用率（依赖metrics-server）")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("cordon     \t\t\t\t标记节点不可调度")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("uncordon   \t\t\t\t标记节点可以调度")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("drain      \t\t\t\t驱逐节点上的应用，准备下线维护")])]),s._v(" "),t("li",[s._v("[x] "),t("strong",[s._v("taint      \t\t\t\t修改节点taint标记")])])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"故障诊断和调试命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#故障诊断和调试命令"}},[s._v("#")]),s._v(" "),t("strong",[s._v("故障诊断和调试命令")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("[x] "),t("strong",[s._v("describe\t\t\t\t显示资源信息")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("logs\t\t\t\t\t显示Pod内容器日志，如果Pod有多个容器，-c 参数指定容器名称")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("attach\t \t\t\t 附加到Pod的内的一个容器")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("exec\t\t\t\t\t在容器执行命令")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("port-forward\t\t\t为Pod创建本地端口映射")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("proxy\t\t\t \t  为Kubernetes API server创建代理")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("cp\t\t\t\t\t  拷贝文件或者目录到容器中，或者从容器内向外拷贝")])])])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"高级命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高级命令"}},[s._v("#")]),s._v(" "),t("strong",[s._v("高级命令")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("[x] "),t("strong",[s._v("apply\t\t\t\t从文件名或者标准输入对资源的创建/更新")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("patch\t\t\t\t使用补丁方式修改、更新资源的某些字段")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("replace  \t\t\t从文件名或者标准输入替换一个资源")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("convert\t\t\t  在不同API版本之间转换对象定义")])])])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"设置命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置命令"}},[s._v("#")]),s._v(" "),t("strong",[s._v("设置命令")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("[x] "),t("strong",[s._v("label\t\t\t\t给资源设置、更新标签")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("annotate\t\t\t 给资源设置、更新注解")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("completion\t\t   kubectl工具自动补全，source < (kubectl completion bash) (依赖软件包bash-completion)")])])])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"其他命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他命令"}},[s._v("#")]),s._v(" "),t("strong",[s._v("其他命令")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("[x] "),t("strong",[s._v("api-resources\t\t\t\t查看所有资源")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("api-versions\t\t\t\t 打印受支持的API版本")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("config\t\t\t\t\t   修改kubeconfig文件 （用于访问API，比如配置认证信息）")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("help\t\t\t\t\t\t 所有命令帮助")])])]),s._v(" "),t("li",[t("p",[s._v("[x] "),t("strong",[s._v("version\t\t\t\t\t  查看kubectl和k8s版本")])])])]),s._v(" "),t("h2",{attrs:{id:"kubectl-run-命令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-run-命令详解"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl run 命令详解")])]),s._v(" "),t("ul",[t("li",[s._v("创建并运行一个或多个容器镜像。")]),s._v(" "),t("li",[s._v("创建一个deployment 或job 来管理容器。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ run NAME --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("image "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--env"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key=value"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("replicas"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bool"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--overrides"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("inline-json"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -- "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("启动nginx实例。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl run nginx --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("启动hazelcast实例，暴露容器端口 5701。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl run hazelcast --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hazelcast --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5701")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("启动hazelcast实例，在容器中设置环境变量“DNS_DOMAIN = cluster”和“POD_NAMESPACE = default”。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl run hazelcast --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hazelcast --env"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DNS_DOMAIN=cluster"')]),s._v(" --env"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POD_NAMESPACE=default"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("启动nginx实例，设置副本数5。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl run nginx --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx --replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("运行 Dry  打印相应的API对象而不创建它们。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl run nginx --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx --dry-run\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-expose命令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-expose命令详解"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl expose命令详解")])]),s._v(" "),t("p",[s._v("将资源暴露为新的Kubernetes Service。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("指定"),t("a",{attrs:{href:"http://docs.kubernetes.org.cn/317.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("deployment"),t("OutboundLink")],1),s._v("、service、"),t("a",{attrs:{href:"http://docs.kubernetes.org.cn/314.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("replica set"),t("OutboundLink")],1),s._v("、"),t("a",{attrs:{href:"http://docs.kubernetes.org.cn/437.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("replication controller"),t("OutboundLink")],1),s._v("或"),t("a",{attrs:{href:"http://docs.kubernetes.org.cn/312.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("pod"),t("OutboundLink")],1),s._v(" ，并使用该资源的选择器作为指定端口上新服务的选择器。deployment 或 replica set只有当其选择器可转换为service支持的选择器时，即当选择器仅包含matchLabels组件时才会作为暴露新的Service。")])]),s._v(" "),t("li",[t("p",[s._v("资源包括(不区分大小写)：")])]),s._v(" "),t("li",[t("p",[s._v("pod（po），service（svc），replication controller（rc），deployment（deploy），replica set（rs）")])])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ expose "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-f FILENAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" TYPE NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--protocol"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TCP"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("UDP"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--target-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("number-or-name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--external-ip"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("external-ip-of-service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("为RC的nginx创建service，并通过Service的80端口转发至容器的8000端口上。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl expose rc nginx --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" --target-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("由“nginx-controller.yaml”中指定的type和name标识的RC创建Service，并通过Service的80端口转发至容器的8000端口上。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl expose -f nginx-controller.yaml --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" --target-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-annotate-命令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-annotate-命令详解"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl annotate 命令详解")])]),s._v(" "),t("p",[s._v("更新一个或多个资源的Annotations信息。")]),s._v(" "),t("ul",[t("li",[s._v("Annotations由key/value组成。")]),s._v(" "),t("li",[s._v("Annotations的目的是存储辅助数据，特别是通过工具和系统扩展操作的数据，更多介绍在"),t("a",{attrs:{href:"http://docs.kubernetes.org.cn/255.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("li",[s._v("如果--overwrite为true，现有的annotations可以被覆盖，否则试图覆盖annotations将会报错。")]),s._v(" "),t("li",[s._v("如果设置了--resource-version，则更新将使用此resource version，否则将使用原有的resource version。")])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"有效资源类型包括"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有效资源类型包括"}},[s._v("#")]),s._v(" 有效资源类型包括：")]),s._v(" "),t("ul",[t("li",[s._v("all")]),s._v(" "),t("li",[s._v("certificatesigningrequests (aka 'csr')")]),s._v(" "),t("li",[s._v("clusterrolebindings")]),s._v(" "),t("li",[s._v("clusterroles")]),s._v(" "),t("li",[s._v("clusters (valid only for federation apiservers)")]),s._v(" "),t("li",[s._v("componentstatuses (aka 'cs')")]),s._v(" "),t("li",[s._v("configmaps (aka 'cm')")]),s._v(" "),t("li",[s._v("controllerrevisions")]),s._v(" "),t("li",[s._v("cronjobs")]),s._v(" "),t("li",[s._v("daemonsets (aka 'ds')")]),s._v(" "),t("li",[s._v("deployments (aka 'deploy')")]),s._v(" "),t("li",[s._v("endpoints (aka 'ep')")]),s._v(" "),t("li",[s._v("events (aka 'ev')")]),s._v(" "),t("li",[s._v("horizontalpodautoscalers (aka 'hpa')")]),s._v(" "),t("li",[s._v("ingresses (aka 'ing')")]),s._v(" "),t("li",[s._v("jobs")]),s._v(" "),t("li",[s._v("limitranges (aka 'limits')")]),s._v(" "),t("li",[s._v("namespaces (aka 'ns')")]),s._v(" "),t("li",[s._v("networkpolicies (aka 'netpol')")]),s._v(" "),t("li",[s._v("nodes (aka 'no')")]),s._v(" "),t("li",[s._v("persistentvolumeclaims (aka 'pvc')")]),s._v(" "),t("li",[s._v("persistentvolumes (aka 'pv')")]),s._v(" "),t("li",[s._v("poddisruptionbudgets (aka 'pdb')")]),s._v(" "),t("li",[s._v("podpreset")]),s._v(" "),t("li",[s._v("pods (aka 'po')")]),s._v(" "),t("li",[s._v("podsecuritypolicies (aka 'psp')")]),s._v(" "),t("li",[s._v("podtemplates")]),s._v(" "),t("li",[s._v("replicasets (aka 'rs')")]),s._v(" "),t("li",[s._v("replicationcontrollers (aka 'rc')")]),s._v(" "),t("li",[s._v("resourcequotas (aka 'quota')")]),s._v(" "),t("li",[s._v("rolebindings")]),s._v(" "),t("li",[s._v("roles")]),s._v(" "),t("li",[s._v("secrets")]),s._v(" "),t("li",[s._v("serviceaccounts (aka 'sa')")]),s._v(" "),t("li",[s._v("services (aka 'svc')")]),s._v(" "),t("li",[s._v("statefulsets")]),s._v(" "),t("li",[s._v("storageclasses")]),s._v(" "),t("li",[s._v("thirdpartyresources")])])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ annotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--overwrite"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-f FILENAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" TYPE NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KEY_1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("VAL_1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KEY_N")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("VAL_N "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--resource-version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("更新Pod“foo”，设置annotation “description”的value “my frontend”，如果同一个annotation多次设置，则只使用最后设置的value值。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl annotate pods foo "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my frontend'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("根据“pod.json”中的type和name更新pod的annotation")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl annotate -f pod.json "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my frontend'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v('更新Pod"foo"，设置annotation“description”的value“my frontend running nginx”，覆盖现有的值。')]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl annotate --overwrite pods foo "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my frontend running nginx'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("更新 namespace中的所有pod")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl annotate pods --all "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my frontend running nginx'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("只有当resource-version为1时，才更新pod ' foo '。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl annotate pods foo "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my frontend running nginx'")]),s._v(" --resource-version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("通过删除名为“description”的annotations来更新pod ' foo '。#不需要- overwrite flag。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl annotate pods foo description-\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-autoscale-命令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-autoscale-命令详解"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl autoscale 命令详解")])]),s._v(" "),t("ul",[t("li",[s._v("使用 autoscaler 自动设置在kubernetes集群中运行的pod数量（水平自动伸缩）。")]),s._v(" "),t("li",[s._v("指定Deployment、ReplicaSet或ReplicationController，并创建已经定义好资源的自动伸缩器。使用自动伸缩器可以根据需要自动增加或减少系统中部署的pod数量。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ autoscale (-f FILENAME | TYPE NAME | TYPE/NAME) [--min=MINPODS] --max=MAXPODS [--cpu-percent=CPU] [flags]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("使用 Deployment “foo”设定，使用默认的自动伸缩策略，指定目标CPU使用率，使其Pod数量在2到10之间。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ kubectl autoscale deployment foo --min=2 --max=10\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用RC“foo”设定，使其Pod的数量介于1和5之间，CPU使用率维持在80％。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ kubectl autoscale rc foo --max=5 --cpu-percent=80\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-create-命令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create-命令详解"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl create 命令详解")])]),s._v(" "),t("ul",[t("li",[s._v("通过配置文件名或stdin创建一个集群资源对象。")]),s._v(" "),t("li",[s._v("支持JSON和YAML格式的文件。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ create -f FILENAME\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("通过pod.json文件创建一个pod。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create -f ./pod.json\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("通过stdin的JSON创建一个pod。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pod.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kubectl create -f -\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("API版本为v1的JSON格式的docker-registry.yaml文件创建资源。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create -f docker-registry.yaml --edit --output-version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v1 -o json\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-create-clusterrole"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create-clusterrole"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl create clusterrole")])]),s._v(" "),t("ul",[t("li",[s._v("ClusterRole是一组权限的集合，但与Role不同的是，ClusterRole可以在包括所有NameSpce和集群级别的资源或非资源类型进行鉴权。")]),s._v(" "),t("li",[s._v("通过YAML资源定义清单创建ClusterRole")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ clusterrole NAME --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("verb --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("resource.group "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--resource-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("resourcename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("创建一个名为“pod-reader”的ClusterRole，允许用户在pod上执行“get”，“watch”和“list”")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create clusterrole pod-reader --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get,list,watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pods\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建一个名为“pod-reader”的ClusterRole，其中指定了ResourceName")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create clusterrole pod-reader --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get,list,watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pods --resource-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("readablepod --resource-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("anotherpod\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v('在指定的API Group中创建为"foo"的ClusterRole')]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create clusterrole foo --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get,list,watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rs.extensions\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建一个名为“foo”的ClusterRole，并指定SubResource")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create clusterrole foo --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get,list,watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pods,pods/status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用指定的NonResourceURL创建名称“foo”的ClusterRole")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create clusterrole "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get --non-resource-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/logs/*\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-create-clusterrolebinding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create-clusterrolebinding"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl create clusterrolebinding")])]),s._v(" "),t("p",[s._v("角色绑定将一个角色中定义的各种权限授予一个或者一组用户，则该用户或用户组则具有对应绑定的Role或ClusterRole定义的权限。\n角色绑定包含了一组相关主体（即subject, 包括用户——User、用户组——Group、或者服务账户——Service Account）以及对被授予角色的引用。 在某一namespace中可以通过RoleBinding对象授予权限，而集群范围的权限授予则通过ClusterRoleBinding对象完成。")]),s._v(" "),t("ul",[t("li",[s._v("RoleBinding")]),s._v(" "),t("li",[s._v("RoleBinding可以将同一namespace中的subject（用户）绑定到某个具有特定权限的Role下，则此subject即具有该Role定义的权限。")]),s._v(" "),t("li",[s._v("为特定的ClusterRole创建ClusterRoleBinding。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ clusterrolebinding NAME --clusterrole"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NAME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("username"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("groupname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--serviceaccount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("namespace:serviceaccountname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("在集群范围将cluster-admin ClusterRole授予用户user1，user2和group1。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create clusterrolebinding cluster-admin --clusterrole"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cluster-admin --user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user1 --user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user2 --group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("group1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-create-quota"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create-quota"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl create quota")])]),s._v(" "),t("p",[s._v("资源配额(Resource Quotas)是用来限制用户资源用量的一种机制。 它的工作原理为：")]),s._v(" "),t("ul",[t("li",[s._v("资源配额应用在Namespace上，并且每个Namespace最多只能有一个ResourceQuota对象")]),s._v(" "),t("li",[s._v("开启计算资源配额后，创建容器时必须配置计算资源请求或限制(也可以LimitRange设置默认值)")]),s._v(" "),t("li",[s._v("用户超额后禁止创建新的资源")])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"资源配额的启用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#资源配额的启用"}},[s._v("#")]),s._v(" 资源配额的启用")])]),s._v(" "),t("p",[t("strong",[s._v("首先，在API Server启动时配置ResourceQuota adminssion control，然后在namespace中创建ResourceQuota对象即可。")])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"资源配额的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#资源配额的类型"}},[s._v("#")]),s._v(" 资源配额的类型")])]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v("计算资源，包括cpu和memory")])]),s._v(" "),t("ul",[t("li",[s._v("cpu，limits.cpu，requests.cpu")]),s._v(" "),t("li",[s._v("memory，limits.memory，requests.memory")])])]),s._v(" "),t("li",[t("strong",[t("code",[s._v("存储资源，包括存储资源的总量以及制定的storage class的总量")])]),s._v(" "),t("ul",[t("li",[s._v("requests.storage：存储资源总量，如500Gi")]),s._v(" "),t("li",[s._v("persistentvolumeclaims：pvc的个数")]),s._v(" "),t("li",[s._v(".storageclass.storage.k8s.io/requests.storage")]),s._v(" "),t("li",[s._v(".storageclass.storage.k8s.io/persistentvolumeclaims")])])]),s._v(" "),t("li",[t("strong",[t("code",[s._v("对象数，即可创建的对象的个数")])]),s._v(" "),t("ul",[t("li",[s._v("pods, replicationcontrollers, configmaps, secrets")]),s._v(" "),t("li",[s._v("resourcequotas, persistentvolumeclaims")]),s._v(" "),t("li",[s._v("services, services.loadbalancers, services.nodeports")])])])]),s._v(" "),t("p",[t("strong",[s._v("创建具有指定名称、hard限制和可选scopes的resourcequota")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("quota")]),s._v(" NAME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--hard"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("key1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1,key2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--scopes"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Scope1,Scope2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bool"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("创建名为my-quota的resourcequota")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("quota")]),s._v(" my-quota --hard"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cpu"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",memory"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1G,pods"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(",services"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(",replicationcontrollers"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(",resourcequotas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",secrets"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(",persistentvolumeclaims"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建名为best-effort的resourcequota")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("quota")]),s._v(" best-effort --hard"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pods"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" --scopes"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("BestEffort\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("h3",{attrs:{id:"limitrange"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limitrange"}},[s._v("#")]),s._v(" LimitRange")])]),s._v(" "),t("p",[s._v("默认情况下，kubernetes中所有容器都没有任何cpu和内存限制。limitRange用来给Namespace增加一个资源限制，包括最小、最大和默认资源。比如：")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" LimitRange\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mylimits\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("limits")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1Gi\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("min")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 200m\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 6Mi\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 300m\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 200Mi\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("defaultRequest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 200m\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100Mi\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1Gi\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("min")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100m\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 3Mi\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Container\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h2",{attrs:{id:"kubectl-create-role"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create-role"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl create role")])]),s._v(" "),t("p",[s._v("Role是一组权限的集合，例如Role可以包含列出Pod权限及列出Deployment权限，Role用于给某个NameSpace中的资源进行鉴权。")]),s._v(" "),t("p",[t("strong",[s._v("使用单一规则创建Role。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ role NAME --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("verb --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("resource.group/subresource "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--resource-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("resourcename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("创建名为“pod-reader”的Role ，允许用户在pod上执行“get”，“watch”和“list”")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create role pod-reader --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("list --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pods\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建名为“pod-reader”的Role，并指定ResourceName")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create role pod-reader --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get,list,watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pods --resource-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("readablepod --resource-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("anotherpod\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用指定的API Group 创建名为“foo”的Role")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create role foo --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get,list,watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rs.extensions\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用指定的SubResource创建名为“foo”的Role")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create role foo --verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get,list,watch --resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pods,pods/status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("通过YAML资源定义清单创建Role")])]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" rbac.authorization.k8s.io/v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Role\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" pod"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("role\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rules")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiGroups")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("resources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pods"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("verbs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"get"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"watch"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"kubectl-create-rolebinding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create-rolebinding"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl create rolebinding")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("RoleBinding")]),s._v("向一个或一组用户授予在"),t("code",[s._v("Role")]),s._v("中定义的权限。它包含"),t("code",[s._v("subjects")]),s._v("（User，Group或Service Account），以及对所授予角色的引用。可以在namespace中使用RoleBinding或在集群范围内使用ClusterRoleBinding。")]),s._v(" "),t("li",[s._v("RoleBinding可以引用同一namespace下的Role。")]),s._v(" "),t("li",[s._v("roleRef是实际创建绑定的方式。该kind可以是Role或ClusterRole，并且name将引用具体名字的Role或ClusterRole")]),s._v(" "),t("li",[s._v("ClusterRoleBinding可以在集群级别和所有namespace中授予权限。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ rolebinding NAME --clusterrole"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NAME"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("--role"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NAME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("username"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("groupname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--serviceaccount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("namespace:serviceaccountname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("将admin ClusterRole授予user1，user2和group1。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create rolebinding admin --clusterrole"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("admin --user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user1 --user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user2 --group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("group1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-create-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-create-service"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl create service")])]),s._v(" "),t("ul",[t("li",[s._v("Kubernetes Service定义了这样一种抽象： Service是一种可以访问 Pod逻辑分组的策略， Service通常是通过 Label Selector访问 Pod组。")]),s._v(" "),t("li",[s._v("Service能够提供负载均衡的能力，但是在使用上有以下限制：只提供 4 层负载均衡能力，而没有 7 层功能，但有时我们可能需要更多的匹配规则来转发请求，这点上 4 层负载均衡是不支持的")])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"service-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#service-类型"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Service 类型")])])]),s._v(" "),t("p",[s._v("Service在 K8s中有以下四种类型：")]),s._v(" "),t("p",[t("strong",[t("code",[s._v("① ClusterIp")])])]),s._v(" "),t("ul",[t("li",[s._v("默认类型，自动分配一个仅Cluster内部可以访问的虚拟IP")])]),s._v(" "),t("p",[t("strong",[t("code",[s._v("② NodePort")])])]),s._v(" "),t("ul",[t("li",[s._v("在ClusterIP基础上为Service在每台机器上绑定一个端口，这样就可以通过: NodePort来访问该服务。")])]),s._v(" "),t("p",[t("strong",[t("code",[s._v("③ LoadBalancer")])])]),s._v(" "),t("ul",[t("li",[s._v("在NodePort的基础上，借助Cloud Provider创建一个外部负载均衡器，并将请求转发到NodePort")])]),s._v(" "),t("p",[t("strong",[t("code",[s._v("④ ExternalName")])])]),s._v(" "),t("ul",[t("li",[s._v("把集群外部的服务引入到集群内部来，在集群内部直接使用。没有任何类型代理被创建，这只有 Kubernetes 1.7或更高版本的kube-dns才支持。")])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"创建具有指定service名的clusterip。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建具有指定service名的clusterip。"}},[s._v("#")]),s._v(" 创建具有指定Service名的clusterIP。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ clusterip NAME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--tcp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("targetPort"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("创建Service名为my-cs为的clusterIP")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" clusterip my-cs --tcp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5678")]),s._v(":8080\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建Service名为my-cs的clusterIP（headless模式）")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" clusterip my-cs --clusterip"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"None"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("h3",{attrs:{id:"创建指定service名的externalname。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建指定service名的externalname。"}},[s._v("#")]),s._v(" 创建指定Service名的ExternalName。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ externalname NAME --external-name external.name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("创建Service名为my-ns的ExternalName")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" externalname my-ns --external-name bar.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("h3",{attrs:{id:"创建一个指定名称的service的loadbalancer。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建一个指定名称的service的loadbalancer。"}},[s._v("#")]),s._v(" 创建一个指定名称的Service的LoadBalancer。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ loadbalancer NAME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--tcp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("port:targetPort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("创建一个Service名为my-lbs的LoadBalancer。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" loadbalancer my-lbs --tcp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5678")]),s._v(":8080\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("h3",{attrs:{id:"创建指定service名称的nodeport。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建指定service名称的nodeport。"}},[s._v("#")]),s._v(" 创建指定Service名称的nodeport。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ nodeport NAME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--tcp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("port:targetPort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dry-run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("创建service名为my-ns的新的nodeport。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" nodeport my-ns --tcp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5678")]),s._v(":8080\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-delete-命令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-delete-命令详解"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl delete 命令详解")])]),s._v(" "),t("ul",[t("li",[s._v("通过配置文件名、stdin、资源名称或label选择器来删除资源。")]),s._v(" "),t("li",[s._v("支持JSON和YAML格式文件。可以只指定一种类型的参数：文件名、资源名称或label选择器。")]),s._v(" "),t("li",[s._v("有些资源，如pod，支持优雅的（graceful）删除，因为这些资源一般是集群中的实体，所以删除不可能会立即生效，这些资源在强制终止之前默认定义了一个周期（宽限期），但是你可以使用--grace-period flag来覆盖该值，或者通过pass --now设置该周期为1。")]),s._v(" "),t("li",[s._v("如果托管Pod的Node节点已经停止或者无法连接API Server，使用delete命令删除Pod需等待时间更长。要强制删除资源，需指定- force flag，且设置周期（宽限期）为0。")]),s._v(" "),t("li",[s._v("如果执行强制删除Pod，则调度程序会在节点释放这些Pod之前将新的Pod放在这些节点上，并使之前Pod立即被逐出。")]),s._v(" "),t("li",[s._v("注意：执行delete命令时不会检查资源版本，如果在执行delete操作时有人进行了更新操作，那么更新操作将连同资源一起被删除。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ delete "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-f FILENAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" TYPE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -l label "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" --all"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("使用 pod.json中指定的资源类型和名称删除pod。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl delete -f ./pod.json\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("根据传入stdin的JSON所指定的类型和名称删除pod。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pod.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kubectl delete -f -\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除名为“baz”和“foo”的Pod和Service。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl delete pod,service baz foo\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除 Label name = myLabel的pod和Service。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl delete pods,services -l "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("myLabel\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("强制删除dead node上的pod")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl delete pod foo --grace-period"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --force\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除所有pod")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl delete pods --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"kubectl-edit-命令详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-edit-命令详解"}},[s._v("#")]),s._v(" "),t("code",[s._v("kubectl edit 命令详解")])]),s._v(" "),t("ul",[t("li",[s._v("使用默认编辑器 编辑服务器上定义的资源。")]),s._v(" "),t("li",[s._v("使用命令行工具获取的任何资源都可以使用edit命令编辑。edit命令会打开使用KUBE_EDITOR，GIT_EDITOR 或者EDITOR环境变量定义的编辑器，可以同时编辑多个资源，但所编辑过的资源只会一次性提交。edit除命令参数外还接受文件名形式。")]),s._v(" "),t("li",[s._v("文件默认输出格式为YAML。要以JSON格式编辑，请指定“-o json”选项。")]),s._v(" "),t("li",[s._v("如果在更新资源时报错，将会在磁盘上创建一个临时文件来记录。在更新资源时最常见的错误是几个用户同时使用编辑器更改服务器上资源，发生这种情况，你需要将你的更改应用到最新版本的资源上，或者更新保存的临时副本。")])]),s._v(" "),t("p",[t("strong",[s._v("语法")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ edit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RESOURCE/NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -f FILENAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("示例")])]),s._v(" "),t("p",[s._v("编辑名为'docker-registry'的service：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl edit svc/docker-registry\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用替代的编辑器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KUBE_EDITOR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nano"')]),s._v(" kubectl edit svc/docker-registry\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("编辑名为“myjob”的service，输出JSON格式 V1 API版本")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl edit job.v1.batch/myjob -o json\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("以YAML格式输出编辑deployment“mydeployment”，并将修改的配置保存在annotation中：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl edit deployment/mydeployment -o yaml --save-config\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);