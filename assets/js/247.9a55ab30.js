(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{727:function(t,s,r){"use strict";r.r(s);var a=r(19),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"python异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#python异常"}},[t._v("#")]),t._v(" Python异常")]),t._v(" "),r("p",[t._v("异常即是一个事件，该事件会在程序执行过程中发生，影响了程序的正常执行。一般情况下，在 Python 无法正常处理程序时就会发生一个异常。异常是 Python 对象，表示一个错误。当 Python 脚本发生异常时，需要程序员捕获处理它，否则程序会终止执行。")]),t._v(" "),r("h3",{attrs:{id:"python-的一些标准异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#python-的一些标准异常"}},[t._v("#")]),t._v(" Python 的一些标准异常")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("异常名称")]),t._v(" "),r("th",[t._v("描述")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("BaseException")]),t._v(" "),r("td",[t._v("所有异常的基类")])]),t._v(" "),r("tr",[r("td",[t._v("SystemExit")]),t._v(" "),r("td",[t._v("解释器请求退出")])])])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("KeyboardInterrupt")]),t._v(" "),r("th",[t._v("用户中断执行（通常是输入^C）")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("Exception")]),t._v(" "),r("td",[t._v("常规错误的基类")])]),t._v(" "),r("tr",[r("td",[t._v("StopIteration")]),t._v(" "),r("td",[t._v("迭代器没有更多的值")])]),t._v(" "),r("tr",[r("td",[t._v("GeneratorExit")]),t._v(" "),r("td",[t._v("生成器（generator）发生异常来通知退出")])]),t._v(" "),r("tr",[r("td",[t._v("StandardError")]),t._v(" "),r("td",[t._v("所有的内建标准异常的基类")])]),t._v(" "),r("tr",[r("td",[t._v("ArithmeticError")]),t._v(" "),r("td",[t._v("所有数值计算错误的基类")])]),t._v(" "),r("tr",[r("td",[t._v("FloatingPointError")]),t._v(" "),r("td",[t._v("浮点计算错误")])]),t._v(" "),r("tr",[r("td",[t._v("OverflowError")]),t._v(" "),r("td",[t._v("数值运算超出最大限制")])]),t._v(" "),r("tr",[r("td",[t._v("ZeroDivisionError")]),t._v(" "),r("td",[t._v("除（或取模）零（所有数据类型）")])]),t._v(" "),r("tr",[r("td",[t._v("AssertionError")]),t._v(" "),r("td",[t._v("断言语句失败")])]),t._v(" "),r("tr",[r("td",[t._v("AttributeError")]),t._v(" "),r("td",[t._v("对象没有这个属性")])]),t._v(" "),r("tr",[r("td",[t._v("EOFError")]),t._v(" "),r("td",[t._v("没有内建输入，到达 EOF 标记")])]),t._v(" "),r("tr",[r("td",[t._v("EnvironmentError")]),t._v(" "),r("td",[t._v("操作系统错误的基类")])]),t._v(" "),r("tr",[r("td",[t._v("IOError")]),t._v(" "),r("td",[t._v("输入/输出操作失败")])]),t._v(" "),r("tr",[r("td",[t._v("OSError")]),t._v(" "),r("td",[t._v("操作系统错误")])]),t._v(" "),r("tr",[r("td",[t._v("WindowsError")]),t._v(" "),r("td",[t._v("系统调用失败")])]),t._v(" "),r("tr",[r("td",[t._v("ImportError")]),t._v(" "),r("td",[t._v("导入模块/对象失败")])]),t._v(" "),r("tr",[r("td",[t._v("LookupError")]),t._v(" "),r("td",[t._v("无效数据查询的基类")])]),t._v(" "),r("tr",[r("td",[t._v("IndexError")]),t._v(" "),r("td",[t._v("序列中没有此索引（index）")])]),t._v(" "),r("tr",[r("td",[t._v("KeyError")]),t._v(" "),r("td",[t._v("映射中没有这个键")])]),t._v(" "),r("tr",[r("td",[t._v("MemoryError")]),t._v(" "),r("td",[t._v("内存溢出错误（对于 Python 解释器不是致命的）")])]),t._v(" "),r("tr",[r("td",[t._v("NameError")]),t._v(" "),r("td",[t._v("未声明/初始化对象（没有属性）")])]),t._v(" "),r("tr",[r("td",[t._v("UnboundLocalError")]),t._v(" "),r("td",[t._v("访问未初始化的本地变量")])]),t._v(" "),r("tr",[r("td",[t._v("ReferenceError")]),t._v(" "),r("td",[t._v("弱引用（Weak reference）试图访问已经垃圾回收了的对象")])]),t._v(" "),r("tr",[r("td",[t._v("RuntimeError")]),t._v(" "),r("td",[t._v("一般的运行时错误")])]),t._v(" "),r("tr",[r("td",[t._v("NotImplementedError")]),t._v(" "),r("td",[t._v("尚未实现的方法")])]),t._v(" "),r("tr",[r("td",[t._v("SyntaxError")]),t._v(" "),r("td",[t._v("Python 语法错误")])]),t._v(" "),r("tr",[r("td",[t._v("IndentationError")]),t._v(" "),r("td",[t._v("缩进错误")])]),t._v(" "),r("tr",[r("td",[t._v("TabError")]),t._v(" "),r("td",[t._v("Tab 和空格混用")])]),t._v(" "),r("tr",[r("td",[t._v("SystemError")]),t._v(" "),r("td",[t._v("一般的解释器系统错误")])]),t._v(" "),r("tr",[r("td",[t._v("TypeError")]),t._v(" "),r("td",[t._v("对类型无效的操作")])]),t._v(" "),r("tr",[r("td",[t._v("ValueError")]),t._v(" "),r("td",[t._v("传入无效的参数")])]),t._v(" "),r("tr",[r("td",[t._v("UnicodeError")]),t._v(" "),r("td",[t._v("Unicode 相关的错误")])]),t._v(" "),r("tr",[r("td",[t._v("UnicodeDecodeError")]),t._v(" "),r("td",[t._v("Unicode 解码时的错误")])]),t._v(" "),r("tr",[r("td",[t._v("UnicodeEncodeError")]),t._v(" "),r("td",[t._v("Unicode 编码时错误")])]),t._v(" "),r("tr",[r("td",[t._v("UnicodeTranslateError")]),t._v(" "),r("td",[t._v("Unicode 转换时错误")])]),t._v(" "),r("tr",[r("td",[t._v("Warning")]),t._v(" "),r("td",[t._v("警告的基类")])]),t._v(" "),r("tr",[r("td",[t._v("DeprecationWarning")]),t._v(" "),r("td",[t._v("关于被弃用的特征的警告")])]),t._v(" "),r("tr",[r("td",[t._v("FutureWarning")]),t._v(" "),r("td",[t._v("关于构造将来语义会有改变的警告")])]),t._v(" "),r("tr",[r("td",[t._v("OverflowWarning")]),t._v(" "),r("td",[t._v("旧的关于自动提升为长整型（long）的警告")])]),t._v(" "),r("tr",[r("td",[t._v("PendingDeprecationWarning")]),t._v(" "),r("td",[t._v("关于特性将会被废弃的警告")])]),t._v(" "),r("tr",[r("td",[t._v("RuntimeWarning")]),t._v(" "),r("td",[t._v("可疑的运行时行为（runtime behavior）的警告")])]),t._v(" "),r("tr",[r("td",[t._v("SyntaxWarning")]),t._v(" "),r("td",[t._v("可疑的语法的警告")])]),t._v(" "),r("tr",[r("td",[t._v("UserWarning")]),t._v(" "),r("td",[t._v("用户代码生成的警告")])])])]),t._v(" "),r("p",[t._v("捕捉异常可以使用 try/except 语句。try/except 语句用来检测 try 语句块中的错误，从而让 except 语句捕获异常信息并处理。如果不想在异常发生时结束程序，只需在 try 里捕获它。")]),t._v(" "),r("p",[t._v("语法：")]),t._v(" "),r("div",{staticClass:"language-python line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("语句"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#运行别的代码")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("名字"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("语句"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果在 try 部份引发了'name'异常")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("名字"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("，"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("数据"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("语句"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果引发了'name'异常，获得附加的数据")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("语句"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果没有异常发生")]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br")])]),r("ul",[r("li",[t._v("try 的工作原理是，当开始一个 try 语句后，Python 就在当前程序的上下文中 作标记，这样当异常出现时就可以回到这里，try 子句先执行，接下来会发生什么 依赖于执行时是否出现异常。")]),t._v(" "),r("li",[t._v("如果当 try 后的语句执行时发生异常，Python 就跳回到 try 并执行第一个匹配 该异常的 except 子句，异常处理完毕，控制流就通过整个 try 语句（除非在处理异 常时又引发新的异常）。")]),t._v(" "),r("li",[t._v("如果在 try 后的语句里发生了异常，却没有匹配的 except 子句，异常将被递交 到上层的 try，或者到程序的最上层（这样将结束程序，并打印缺省的出错信息）。")]),t._v(" "),r("li",[t._v("如果在 try 子句执行时没有发生异常，Python 将执行 else 语句后的语句（如果 有 else 的话），然后控制流通过整个 try 语句。")])]),t._v(" "),r("p",[t._v("finally 是无论是否有异常，在整个 try 语句结束通过之后处理的语句。 示例：")]),t._v(" "),r("div",{staticClass:"language-python line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \tfh "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G:\\\\testfile.txt"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \tfh"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是一个测试文件，用于测试异常!!"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" IOError"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error: 没有找到文件或读取文件失败"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"内容写入文件成功"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \tfh"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"有无异常都要做的事情！"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br"),r("span",{staticClass:"line-number"},[t._v("9")]),r("br"),r("span",{staticClass:"line-number"},[t._v("10")]),r("br")])]),r("p",[t._v("正常结果显示：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" 内容写入文件成功 \n 有无异常都要做的事情！\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br")])]),r("p",[t._v("而且在指定的路径里面会有个新的文件 testfile.txt，里面内容就是“这是一个 测试文件，用于测试异常!!”。")]),t._v(" "),r("p",[t._v("如果出现异常，则结果为：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("Error: 没有找到文件或读取文件失败 \n有无异常都要做的事情！\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br")])]),r("h3",{attrs:{id:"自定义异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自定义异常"}},[t._v("#")]),t._v(" 自定义异常")]),t._v(" "),r("p",[t._v("尽管内建异常类包括了大部分异常，而且可满足很多要求，但有时还是要创 建自己的异常类。比如需要精确知道问题的根源，就需要使用自定义异常精确定 位问题。此时可以通过创建一个新 Exception 类拥有自己的异常。异常应该继承自 Exception 类，可以直接继承，也可以间接继承。因为错误就是类，捕获一个错误 就是捕获该类的一个实例，因此错误并不是凭空产生的，而是由一些不合理的部 分导致的。")]),t._v(" "),r("p",[t._v("Python 的内置函数会抛出很多类型的错误，自己编写的函数也可以抛出错误。 如果要抛出错误，那么可以根据需要定义一个错误的类，选择好继承关系，然后 用 raise 语句抛出一个错误的实例。")]),t._v(" "),r("p",[t._v("示例：")]),t._v(" "),r("div",{staticClass:"language-python line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BadScore")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Exception"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),r("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''自定义异常类'''")]),t._v("\n \t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("score"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \tself"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" score\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \ts "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入分数:'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \t\t"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#触发自定义异常")]),t._v("\n \t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" BadScore"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" BadScore "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'分数无效：'")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("e"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" ValueError"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n \t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'输入错误，只能输入数值（0-100）'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OK!'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br"),r("span",{staticClass:"line-number"},[t._v("9")]),r("br"),r("span",{staticClass:"line-number"},[t._v("10")]),r("br"),r("span",{staticClass:"line-number"},[t._v("11")]),r("br"),r("span",{staticClass:"line-number"},[t._v("12")]),r("br"),r("span",{staticClass:"line-number"},[t._v("13")]),r("br"),r("span",{staticClass:"line-number"},[t._v("14")]),r("br"),r("span",{staticClass:"line-number"},[t._v("15")]),r("br")])]),r("p",[t._v("输入正确的数字，会提示“OK!”，数值超过了 100 或者小于 0 则会抛出自定 的异常，提示分数无效。还有一种情况是输入的不是数值，则会抛出 ValueError 异常。")])])}),[],!1,null,null,null);s.default=n.exports}}]);