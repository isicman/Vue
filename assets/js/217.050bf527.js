(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{697:function(v,o,_){"use strict";_.r(o);var r=_(19),a=Object(r.a)({},(function(){var v=this,o=v.$createElement,_=v._self._c||o;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"cyborg"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cyborg"}},[v._v("#")]),v._v(" Cyborg")]),v._v(" "),_("h3",{attrs:{id:"cyborg项目背景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cyborg项目背景"}},[v._v("#")]),v._v(" Cyborg项目背景")]),v._v(" "),_("p",[_("code",[v._v("随着机器学习（machine learning）和机器视觉（compute vision）的快速发展，用户对GPU的需求也日益剧增。截止目前，大多数用户仍会选择带有GPU的裸机服务器")]),v._v("。然而，这同时意味着用户需要承担由配置此类设备所带来的管理性成本。如今，用户将能够使用vGPU驱动的虚拟机，并利用这部分资源运行人工智能相关的Workload。")]),v._v(" "),_("p",[v._v("随着OpenStack社区对AI和边缘计算的布局，而加速计算在边缘比在数据中心更为普遍，所以这又会加强OpenStack的地位，因此OpenStack在第17个版本迎来了Cyborg项目。")]),v._v(" "),_("p",[_("code",[v._v("Cyborg项目起源于NFV acceleration management以及ETSI NFV-IFA 004 document，和OPNFV DPACC项目。Cyborg（以前称为Nomad）是用于管理硬件和软件加速资源（如 GPU、FPGA、CryptoCards和DPDK / SPDK）的框架，在Queens发布中首次亮相")]),v._v("。特别是对于有 NFV workload的运营商，计算加速已经成为云虚拟机的必备功能。通过Cyborg，运维者可以列出、识别和发现加速器，连接和分离加速器实例，安装和卸载驱动。它也可以单独使用或与Nova或Ironic结合使用。Cyborg可以通过Nova计算控制器或Ironic裸机控制器来配置和取消配置这些设备。")]),v._v(" "),_("p",[v._v("在加速器方面，Nova计算控制器现在可以将Workload部署到Nvidia和Intel的虚拟化GPU（AMD GPU正在开发）。加速器可用于图形处理的场景（如虚拟桌面和工作站），还可以应用于集群上的通过虚拟化GPU以运行HPC或AI Workload的场景。")]),v._v(" "),_("h3",{attrs:{id:"cyborg组件架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cyborg组件架构"}},[v._v("#")]),v._v(" Cyborg组件架构")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/isicman/image/main/img/202205120030302.png",alt:"1"}})]),v._v(" "),_("p",[v._v("Cyborg API—应该支持有关加速器的基本操作，API支持以下接口：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("attach")]),v._v("：连接现有的物理加速器或创建新的虚拟加速器，然后分配给虚拟机")]),v._v(" "),_("li",[_("code",[v._v("detach")]),v._v("：分离现有物理加速器或释放虚拟机的虚拟加速器")]),v._v(" "),_("li",[_("code",[v._v("list")]),v._v("：列出所有附加的加速器")]),v._v(" "),_("li",[_("code",[v._v("update")]),v._v("：修改加速器（状态或设备本身）")]),v._v(" "),_("li",[_("code",[v._v("admin")]),v._v("：CRUD操作无关的某些配置")])]),v._v(" "),_("p",[v._v("Cyborg Agent—Cyborg agent将存在于计算主机以及可能使用加速器的其他主机上，agent具体的作用：")]),v._v(" "),_("ul",[_("li",[v._v("检查硬件以找到加速器")]),v._v(" "),_("li",[v._v("管理安装驱动程序，依赖关系和卸载驱动")]),v._v(" "),_("li",[v._v("将实例连接到加速器")]),v._v(" "),_("li",[v._v("向Cyborg服务器报告有关可用加速器，状态和利用率的数据")]),v._v(" "),_("li",[_("code",[v._v("硬件发现")]),v._v("：\n每隔数秒就会扫描实例的加速器和现有加速器的使用级别，并将这些信息通过心跳消息报告给Cyborg服务器，以帮助管理调度加速器")]),v._v(" "),_("li",[_("code",[v._v("硬件管理")]),v._v("：\nAnsible将用于管理每个加速器的配置文件和加速器的Driver。install和uninstall特定的ansible playbook适配Cyborg所支持的硬件。在管理的硬件上进行的配置更改将通过运行不同配置的playbook作为底层实现")]),v._v(" "),_("li",[_("code",[v._v("实例连接")]),v._v("：\n一旦产生一个实例需要连接到主机上的特定加速器，Cyborg服务器将向Cyborg agent发送消息。由于不同加速器之间的连接方法不同，因此agent需要不同的driver提供连接功能")])]),v._v(" "),_("p",[v._v("Cyborg-Conductor—Cyborg-db的数据库查询更新操作都需要通过向Cyborg-conductor服务发送RPC请求来实现，conductor负责数据库的访问权限控制，避免直接访问数据库")]),v._v(" "),_("p",[v._v("openstack-Cyborg-generic-driver功能")]),v._v(" "),_("ul",[_("li",[v._v("识别和发现附加的加速器后端")]),v._v(" "),_("li",[v._v("列出在后端运行的服务")]),v._v(" "),_("li",[v._v("将加速器附加到通用后端")]),v._v(" "),_("li",[v._v("从通用后端分离加速器。")]),v._v(" "),_("li",[v._v("列出附加到通用后端的加速器。")]),v._v(" "),_("li",[v._v("修改附加到通用后端的加速器。")])]),v._v(" "),_("p",[v._v("Quata—cyborg resource quota，Cyborg的配额管理用于在构建虚拟机时管理用户或项目对加速器的访问。目前，项目或用户可能拥有无限数量的加速资源，应该有一个限制，限制是可配置的")]),v._v(" "),_("h3",{attrs:{id:"cyborg调用加速器过程-vfpga"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cyborg调用加速器过程-vfpga"}},[v._v("#")]),v._v(" Cyborg调用加速器过程（vFPGA）")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/isicman/image/main/img/202205120031209.png",alt:"2"}})]),v._v(" "),_("p",[v._v("整个流程：")]),v._v(" "),_("ol",[_("li",[v._v("ronic监控网络并发现新资源")]),v._v(" "),_("li",[v._v("新的主机通过pXE启动并用Hypervisor初始化")]),v._v(" "),_("li",[v._v("Agent更新Nova和Neutron DB")]),v._v(" "),_("li",[v._v("Ironic agent根据存储在swift / glance / glare中的比特流加载静态区域")]),v._v(" "),_("li",[v._v("Nova agent被通知存在新的PCIe设备（来自SR-IOV的VF）并更新Nova DB")]),v._v(" "),_("li",[v._v("Nova根据用户指令需要孵化一台虚拟机并配备PR（vFPGA）")]),v._v(" "),_("li",[v._v("Nova过滤器找到可用资源并执行虚拟机创建/配置")]),v._v(" "),_("li",[v._v("VM cloud_init使用本地文件或Swift中的比特流加载PR—VM请求Cyborg从Glare加载PR")]),v._v(" "),_("li",[v._v("VF注册并分配给虚拟机")]),v._v(" "),_("li",[v._v("VM应用程序访问VF")])])])}),[],!1,null,null,null);o.default=a.exports}}]);